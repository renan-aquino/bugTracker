// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bugTracker.Data;

#nullable disable

namespace bugTracker.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("bugTracker.Models.CommentModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AutorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.Property<int?>("TicketModelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("TicketModelID");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("bugTracker.Models.HistoryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AutorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.Property<int?>("TicketModelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("TicketModelID");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("bugTracker.Models.ProjectModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("bugTracker.Models.TicketModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("CriadorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CriadorID");

                    b.HasIndex("ProjetoID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("bugTracker.Models.UserModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("bugTracker.Models.CommentModel", b =>
                {
                    b.HasOne("bugTracker.Models.UserModel", "Autor")
                        .WithMany("Comentarios")
                        .HasForeignKey("AutorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("bugTracker.Models.TicketModel", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("TicketModelID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("bugTracker.Models.HistoryModel", b =>
                {
                    b.HasOne("bugTracker.Models.UserModel", "Autor")
                        .WithMany("Atualizacoes")
                        .HasForeignKey("AutorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("bugTracker.Models.TicketModel", null)
                        .WithMany("Historico")
                        .HasForeignKey("TicketModelID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("bugTracker.Models.TicketModel", b =>
                {
                    b.HasOne("bugTracker.Models.UserModel", "Criador")
                        .WithMany("Tickets")
                        .HasForeignKey("CriadorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("bugTracker.Models.ProjectModel", "Projeto")
                        .WithMany("Tickets")
                        .HasForeignKey("ProjetoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Criador");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("bugTracker.Models.ProjectModel", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("bugTracker.Models.TicketModel", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Historico");
                });

            modelBuilder.Entity("bugTracker.Models.UserModel", b =>
                {
                    b.Navigation("Atualizacoes");

                    b.Navigation("Comentarios");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
